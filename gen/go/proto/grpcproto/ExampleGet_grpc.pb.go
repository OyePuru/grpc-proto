// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.12.4
// source: proto/grpcproto/ExampleGet.proto

package grpcproto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ExampleGetService_ExampleGetHandler_FullMethodName = "/grpcproto.ExampleGetService/ExampleGetHandler"
)

// ExampleGetServiceClient is the client API for ExampleGetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ExampleGetServiceClient interface {
	ExampleGetHandler(ctx context.Context, in *ExampleGetRequest, opts ...grpc.CallOption) (*ExampleGetResponse, error)
}

type exampleGetServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewExampleGetServiceClient(cc grpc.ClientConnInterface) ExampleGetServiceClient {
	return &exampleGetServiceClient{cc}
}

func (c *exampleGetServiceClient) ExampleGetHandler(ctx context.Context, in *ExampleGetRequest, opts ...grpc.CallOption) (*ExampleGetResponse, error) {
	out := new(ExampleGetResponse)
	err := c.cc.Invoke(ctx, ExampleGetService_ExampleGetHandler_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExampleGetServiceServer is the server API for ExampleGetService service.
// All implementations must embed UnimplementedExampleGetServiceServer
// for forward compatibility
type ExampleGetServiceServer interface {
	ExampleGetHandler(context.Context, *ExampleGetRequest) (*ExampleGetResponse, error)
	mustEmbedUnimplementedExampleGetServiceServer()
}

// UnimplementedExampleGetServiceServer must be embedded to have forward compatible implementations.
type UnimplementedExampleGetServiceServer struct {
}

func (UnimplementedExampleGetServiceServer) ExampleGetHandler(context.Context, *ExampleGetRequest) (*ExampleGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExampleGetHandler not implemented")
}
func (UnimplementedExampleGetServiceServer) mustEmbedUnimplementedExampleGetServiceServer() {}

// UnsafeExampleGetServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ExampleGetServiceServer will
// result in compilation errors.
type UnsafeExampleGetServiceServer interface {
	mustEmbedUnimplementedExampleGetServiceServer()
}

func RegisterExampleGetServiceServer(s grpc.ServiceRegistrar, srv ExampleGetServiceServer) {
	s.RegisterService(&ExampleGetService_ServiceDesc, srv)
}

func _ExampleGetService_ExampleGetHandler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleGetServiceServer).ExampleGetHandler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ExampleGetService_ExampleGetHandler_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleGetServiceServer).ExampleGetHandler(ctx, req.(*ExampleGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ExampleGetService_ServiceDesc is the grpc.ServiceDesc for ExampleGetService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ExampleGetService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "grpcproto.ExampleGetService",
	HandlerType: (*ExampleGetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExampleGetHandler",
			Handler:    _ExampleGetService_ExampleGetHandler_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/grpcproto/ExampleGet.proto",
}
