// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.12.4
// source: proto/grpcproto/ExamplePost.proto

package grpcproto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ExamplePostService_ExamplePostHandler_FullMethodName = "/grpcproto.ExamplePostService/ExamplePostHandler"
)

// ExamplePostServiceClient is the client API for ExamplePostService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ExamplePostServiceClient interface {
	ExamplePostHandler(ctx context.Context, in *ExamplePostRequest, opts ...grpc.CallOption) (*ExamplePostResponse, error)
}

type examplePostServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewExamplePostServiceClient(cc grpc.ClientConnInterface) ExamplePostServiceClient {
	return &examplePostServiceClient{cc}
}

func (c *examplePostServiceClient) ExamplePostHandler(ctx context.Context, in *ExamplePostRequest, opts ...grpc.CallOption) (*ExamplePostResponse, error) {
	out := new(ExamplePostResponse)
	err := c.cc.Invoke(ctx, ExamplePostService_ExamplePostHandler_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExamplePostServiceServer is the server API for ExamplePostService service.
// All implementations must embed UnimplementedExamplePostServiceServer
// for forward compatibility
type ExamplePostServiceServer interface {
	ExamplePostHandler(context.Context, *ExamplePostRequest) (*ExamplePostResponse, error)
	mustEmbedUnimplementedExamplePostServiceServer()
}

// UnimplementedExamplePostServiceServer must be embedded to have forward compatible implementations.
type UnimplementedExamplePostServiceServer struct {
}

func (UnimplementedExamplePostServiceServer) ExamplePostHandler(context.Context, *ExamplePostRequest) (*ExamplePostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExamplePostHandler not implemented")
}
func (UnimplementedExamplePostServiceServer) mustEmbedUnimplementedExamplePostServiceServer() {}

// UnsafeExamplePostServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ExamplePostServiceServer will
// result in compilation errors.
type UnsafeExamplePostServiceServer interface {
	mustEmbedUnimplementedExamplePostServiceServer()
}

func RegisterExamplePostServiceServer(s grpc.ServiceRegistrar, srv ExamplePostServiceServer) {
	s.RegisterService(&ExamplePostService_ServiceDesc, srv)
}

func _ExamplePostService_ExamplePostHandler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExamplePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExamplePostServiceServer).ExamplePostHandler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ExamplePostService_ExamplePostHandler_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExamplePostServiceServer).ExamplePostHandler(ctx, req.(*ExamplePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ExamplePostService_ServiceDesc is the grpc.ServiceDesc for ExamplePostService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ExamplePostService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "grpcproto.ExamplePostService",
	HandlerType: (*ExamplePostServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExamplePostHandler",
			Handler:    _ExamplePostService_ExamplePostHandler_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/grpcproto/ExamplePost.proto",
}
